from typing import Optional

class ExceptionPrettyPrinter: ...
class StackInfoRenderer: ...

class UnicodeEncoder:
    def __init__(self, encoding: str = "utf-8", errors: str = "backslashreplace"): ...

class UnicodeDecoder:
    def __init__(self, encoding: str = "utf-8", errors: str = "replace"): ...

class JSONRenderer:
    def __init__(self, serializer, **dumps_kw): ...

class TimeStamper:
    def __new__(cls, fmt=None, utc=True, key="timestamp"): ...

class KeyValueRenderer:
    def __init__(self, sort_keys: bool = False, key_order: Optional[list] = None, drop_missing: bool = False,
                 repr_native_str: bool = True): ...

def _json_fallback_handler(obj): ...
def _figure_out_exc_info(v): ...
def format_exc_info(logger: str, name: str, event_dict: dict) -> dict: ...

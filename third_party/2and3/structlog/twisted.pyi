from ._base import BoundLoggerBase
from .processors import JSONRenderer as GenericJSONRenderer

class BoundLogger(BoundLoggerBase):
    def msg(self, event=None, **kw): ...
    def err(self, event=None, **kw): ...

class EventAdapter:
    def __init__(self, dictRenderer=None): ...

class LoggerFactory(object): ...

class ReprWrapper(object):
    def __init__(self, string): ...

class JSONRenderer(GenericJSONRenderer): ...

class PlainFileLogObserver:
    def __init__(self, file): ...

class JSONLogObserverWrapper:
    def __init__(self, observer): ...

def plainJSONStdOutLogger(): ...
def _extractStuffAndWhy(eventDict) -> tuple: ...



